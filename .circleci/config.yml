version: 2.1
orbs:
  anchore: anchore/anchore-engine@1.3.0
jobs:
  "test":
    docker:
      - image: circleci/python:3.7.0
    working_directory: ~/fdk-python
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install tox
            pip install -r requirements.txt
      - run: docker version
      - run: docker pull fnproject/fnserver
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          command: |
            . venv/bin/activate
            tox -epep8
      - run:
          command: |
            . venv/bin/activate
            tox -epy3.7
  "deploy":
    docker:
      - image: circleci/python:3.7.0
    working_directory: ~/fdk-python
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          command: |
            sudo pip install twine
      - deploy:
          command: |
            if [[ "${CIRCLE_BRANCH}" == "master" && -z "${CIRCLE_PR_REPONAME}" ]]; then
              printenv DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin

              git config --global user.email "ci@fnproject.com"
              git config --global user.name "CI"
              git branch --set-upstream-to=origin/${CIRCLE_BRANCH} ${CIRCLE_BRANCH}

              ./build-images.sh 3.6
              ./build-images.sh 3.7.1
              ./release.sh
              ./release_images.sh
            fi

  "python36_security_check":
    executor: anchore/anchore_engine
    working_directory: ~/fdk-python
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run:
          name: Python 3.6 build
          command: |
            apk add bash
            ./build-images.sh 3.6
      - anchore/analyze_local_image:
          image_name: "fnproject/python:3.6-dev fnproject/python:3.6"
          timeout: '500'
          policy_failure: true
          policy_bundle_file_path: .circleci/.anchore/policy_bundle.json
      - anchore/parse_reports

  "python371_security_check":
    executor: anchore/anchore_engine
    working_directory: ~/fdk-python
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run:
          name: Python 3.7.1 build
          command: |
            apk add bash
            ./build-images.sh 3.7.1
      - anchore/analyze_local_image:
          image_name: "fnproject/python:3.7.1-dev fnproject/python:3.7.1"
          timeout: '500'
          policy_failure: true
          policy_bundle_file_path: .circleci/.anchore/policy_bundle.json
      - anchore/parse_reports

workflows:
  version: 2
  build:
    jobs:
      - "test"
  commit:
    jobs:
      - "test"
      - "deploy"
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - "python36_security_check"
      - "python371_security_check"
