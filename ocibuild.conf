name: fdk-python
phoneBookId: functions
team: Functions
description: python FDK
runnerTag: latest
version: 0 # Set by set_fdk_version and the setup_*_image steps
triggerOnCommitBranches: ["pull-requests", "*"]

buildImageVersion: ""
runtimeImageVersion: ""
fdkVersion: ""

authCompartmentOcid: ocid1.compartment.oc1..aaaaaaaajnvcjjwfciaef2iaofrv5oq5yupxaivpzy7qrheify3lh42po27q
pipelineTriggerConfig: {
    "branchFilter": {
        "master": ["ocid1.devopsbuildpipeline.oc1.phx.amaaaaaaepf6idiaq5wmbm45uoxggwdjo4idtgci5a6ysdvir6ysvfwjd37a"]        
    }
}

variables: {
    HTTP_PROXY: "http://www-proxy-hqdc.us.oracle.com:80"
    HTTPS_PROXY: "http://www-proxy-hqdc.us.oracle.com:80"
    NO_PROXY: "localhost,127.0.0.1,.us.oracle.com,.oraclecorp.com"
    RELEASE: "false"
}

exportVariables {
    FDK_VERSION = "${set_fdk_version.fdk_version}"
}

steps: [
    {
        name: set_fdk_version
        type: make
        environment {
          RELEASE: ${RELEASE}
        }
        makeCommands: [
            { target: "set_fdk_version", args: "-f internal/Makefile" }
        ]
        dotEnvFilePath: exportVariables.env
        artifacts: [
              "**"
        ]
    },
    {
        name: unit_test
        type: make
        dependsOn: set_fdk_version
        runnerImage: build-runner-make-ol8
        environment: {
            http_proxy: ${HTTP_PROXY}
            https_proxy: ${HTTPS_PROXY}
            no_proxy: ${NO_PROXY}
            RELEASE: ${RELEASE}
        }
        makeCommands: [
            { target: "unit_test", args: "-f internal/Makefile" }
        ]
        artifacts: [
            "**"
        ]
    },
    {
        name: build_dist_package
        type: make
        dependsOn: unit_test
        runnerImage: build-runner-make-ol8
        environment: {
            http_proxy: ${HTTP_PROXY}
            https_proxy: ${HTTPS_PROXY}
            no_proxy: ${NO_PROXY}
            RELEASE: ${RELEASE}
        }
        makeCommands: [
            { target: "build_dist_package", args: "-f internal/Makefile" }
        ]
        artifacts: [
            "**"
        ]
    },
    {
        name: publish_fdk
        type: publishgeneric
        dependsOn: build_dist_package
        repository: faas-release-generic-local
        filePathsToPublish: [
            { localFile: "dist/fdk-*-py3-none-any.whl", targetDir: "fdk-python" },
            { localFile: "dist/fdk-*.tar.gz", targetDir: "fdk-python" }
        ]
    }

    ### python 3.8 Images ###
    {
        name: setup_python3.8_build_image
        type: make
        dependsOn: build_dist_package
        environment: {
            PYTHON_VERSION: "3.8"
            VERSION_SUFFIX: "dev"
            RELEASE: ${RELEASE}
        }
        makeCommands: [
            { target: "set_image_version", args: "-f internal/Makefile" }
        ]
        artifacts: [
            "**"
        ]
    },
    {
      name: build_image_python3.8
      type: dockerizer
      dependsOn: setup_python3.8_build_image
      dockerFile: "./internal/images/build-stage/3.8/Dockerfile"
      dockerBuildPwd: "./internal/images/build-stage/3.8"
      environment: {
        DOCKER_BUILDKIT: "1"
      }
      dockerBuildArgs: {
        HTTP_PROXY: ${HTTP_PROXY}
        HTTPS_PROXY: ${HTTPS_PROXY}
        NO_PROXY: ${NO_PROXY}
      }
      images: [
        {
          platform: "linux/x86_64"
        },
        {
          platform: "linux/arm64"
        }
      ]
      artifacts: [
        "**"
      ]
    },
    {
      name: publish_build_image_python3.8
      type: publishdocker
      dependsOn: build_image_python3.8
      imageName: "fdk-python"
      repository: odo-docker-signed-local
      artifacts: [
        "**"
      ]
    },
    # The individual build chains for each image can't be merged if the value of the version variable differs,
    # setting it back to the FDK version because that's the only bit that changes per build
    {
      name: fixup_version_build3.8
      type: make
      dependsOn: publish_build_image_python3.8
      environment: {
        RELEASE: ${RELEASE}
      }
      makeCommands: [
        { target: "set_fdk_version", args: "-f internal/Makefile" }
      ]
      artifacts: [
        "**"
      ]
    },
    {
      name: setup_python3.8_runtime_image
      type: make
      dependsOn: [set_fdk_version, build_dist_package]
      environment: {
        PYTHON_VERSION: "3.8"
        RELEASE: ${RELEASE}
      }
      makeCommands: [
        { target: "set_image_version", args: "-f internal/Makefile" }
      ]
      artifacts: [
        "**"
      ]
    },
    {
      name: runtime_image_python3.8
      type: dockerizer
      dependsOn: setup_python3.8_runtime_image,
      dockerFile: "./internal/images/build-stage/3.8/Dockerfile"
      dockerBuildPwd: "./internal/images/build-stage/3.8"
      environment: {
        DOCKER_BUILDKIT: "1"
      }
      dockerBuildArgs: {
          HTTP_PROXY: ${HTTP_PROXY}
          HTTPS_PROXY: ${HTTPS_PROXY}
          NO_PROXY: ${NO_PROXY}
      }
      images: [
        {
          platform: "linux/x86_64"
        },
        {
          platform: "linux/arm64"
        }
      ]
      artifacts: [
        "**"
      ]
    },
    {
      name: publish_runtime_image_python3.8
      type: publishdocker
      dependsOn: runtime_image_python3.8
      imageName: "fdk-python"
      repository: odo-docker-signed-local
      artifacts: [
        "**"
      ]
    },
     # The individual build chains for each image can't be merged if the value of the version vaiable differs,
    # setting it back to the FDK version because that's the only bit that changes per build
    {
      name: fixup_version_runtime3.8
      type: make
      dependsOn: publish_runtime_image_python3.8
      environment: {
        RELEASE: ${RELEASE}
      }
      makeCommands: [
        { target: "set_fdk_version", args: "-f internal/Makefile" }
      ]
      artifacts: [
        "**"
      ]
    },
    {
      name: setup_test_image_build3.8
      type: make
      dependsOn: [unit_test, fixup_version_build3.8, fixup_version_runtime3.8]
      environment: {
        PYTHON_VERSION: "3.8"
        TEST_DIR: ${BLD_INPUT_DIR}"/internal/tests-images/python3.8"
        RELEASE: ${RELEASE}
      }
      makeCommands: [
        { target: "setup_test_image_build", args: "-f internal/Makefile" }
      ]
      artifacts: [
          "**"
      ]
    },
    {
        name: build_test_image_runtime_version_fn_3.8
        type: dockerizer
        dependsOn: setup_test_image_build3.8
        dockerBuildArgs: {
            HTTP_PROXY: ${HTTP_PROXY}
            HTTPS_PROXY: ${HTTPS_PROXY}
            NO_PROXY: ${NO_PROXY}
            BUILD_IMAGE_VERSION: ${buildImageVersion}
            RUNTIME_IMAGE_VERSION: ${runtimeImageVersion}
            FDK_VERSION: ${fdkVersion}
        }
        dockerFile: "./internal/tests-images/python3.8/runtime-version-test/Build_file.bs"
        dockerBuildPwd: "./internal/tests-images/python3.8/runtime-version-test"
        images : [
            {
                platform: "linux/x86_64"
            },
            {
                platform: "linux/arm64"
            }
        ]
        artifacts: [
            "**"
        ]
    },
    {
        name: publish_test_image_runtime_version_fn_3.8
        type: publishdocker
        dependsOn: build_test_image_runtime_version_fn_3.8
        imageName: "faas-runtime-version-fn"
        repository: odo-docker-signed-local
        artifacts: [
          "**"
        ]
    },

    ### python 3.9 Images ###
    {
        name: setup_python3.9_build_image
        type: make
        dependsOn: [set_fdk_version, build_dist_package]
        environment: {
            PYTHON_VERSION: "3.9"
            #FDK_VERSION: ${version}
            VERSION_SUFFIX: "dev"
            RELEASE: ${RELEASE}
        }
        makeCommands: [
            { target: "set_image_version", args: "-f internal/Makefile" }
        ]
        artifacts: [
            "**"
        ]
    },
    {
      name: build_image_python3.9
      type: dockerizer
      dependsOn: setup_python3.9_build_image
      dockerFile: "./internal/images/build-stage/3.9/Dockerfile"
      dockerBuildPwd: "./internal/images/build-stage/3.9"
      environment: {
        DOCKER_BUILDKIT: "1"
      }
      dockerBuildArgs: {
        HTTP_PROXY: ${HTTP_PROXY}
        HTTPS_PROXY: ${HTTPS_PROXY}
        NO_PROXY: ${NO_PROXY}
      }
      images: [
        {
          platform: "linux/x86_64"
        },
        {
          platform: "linux/arm64"
        }
      ]
      artifacts: [
        "**"
      ]
    },
    {
      name: publish_build_image_python3.9
      type: publishdocker
      dependsOn: build_image_python3.9
      imageName: "fdk-python"
      repository: odo-docker-signed-local
      artifacts: [
        "**"
      ]
    },
    # The individual build chains for each image can't be merged if the value of the version variable differs,
    # setting it back to the FDK version because that's the only bit that changes per build
    {
      name: fixup_version_build3.9
      type: make
      dependsOn: publish_build_image_python3.9
      environment: {
        RELEASE: ${RELEASE}
      }
      makeCommands: [
        { target: "set_fdk_version", args: "-f internal/Makefile" }
      ]
      artifacts: [
        "**"
      ]
    },
    {
      name: setup_python3.9_runtime_image
      type: make
      dependsOn: [set_fdk_version, build_dist_package]
      environment: {
        PYTHON_VERSION: "3.9"
        RELEASE: ${RELEASE}
      }
      makeCommands: [
        { target: "set_image_version", args: "-f internal/Makefile" }
      ]
      artifacts: [
        "**"
      ]
    },
    {
      name: runtime_image_python3.9
      type: dockerizer
      dependsOn: setup_python3.9_runtime_image,
      dockerFile: "./internal/images/build-stage/3.9/Dockerfile"
      dockerBuildPwd: "./internal/images/build-stage/3.9"
      environment: {
        DOCKER_BUILDKIT: "1"
      }
      dockerBuildArgs: {
          HTTP_PROXY: ${HTTP_PROXY}
          HTTPS_PROXY: ${HTTPS_PROXY}
          NO_PROXY: ${NO_PROXY}
      }
      images: [
        {
          platform: "linux/x86_64"
        },
        {
          platform: "linux/arm64"
        }
      ]
      artifacts: [
        "**"
      ]
    },
    {
      name: publish_runtime_image_python3.9
      type: publishdocker
      dependsOn: runtime_image_python3.9
      imageName: "fdk-python"
      repository: odo-docker-signed-local
      artifacts: [
        "**"
      ]
    },
     # The individual build chains for each image can't be merged if the value of the version vaiable differs,
    # setting it back to the FDK version because that's the only bit that changes per build
    {
      name: fixup_version_runtime3.9
      type: make
      dependsOn: publish_runtime_image_python3.9
      environment: {
        RELEASE: ${RELEASE}
      }
      makeCommands: [
        { target: "set_fdk_version", args: "-f internal/Makefile" }
      ]
      artifacts: [
        "**"
      ]
    },
    {
      name: setup_test_image_build3.9
      type: make
      dependsOn: [unit_test, fixup_version_build3.9, fixup_version_runtime3.9]
      environment: {
        PYTHON_VERSION: "3.9"
        TEST_DIR: ${BLD_INPUT_DIR}"/internal/tests-images/python3.8"
        RELEASE: ${RELEASE}
      }
      makeCommands: [
        { target: "setup_test_image_build", args: "-f internal/Makefile" }
      ]
      artifacts: [
          "**"
      ]
    },
    {
      name: build_test_image_hello_world_test_3.9
      type: dockerizer
      dependsOn: setup_test_image_build3.9
      dockerBuildArgs: {
        HTTP_PROXY: ${HTTP_PROXY}
        HTTPS_PROXY: ${HTTPS_PROXY}
        NO_PROXY: ${NO_PROXY}
        BUILD_IMAGE_VERSION: ${buildImageVersion}
        RUNTIME_IMAGE_VERSION: ${runtimeImageVersion}
        FDK_VERSION: ${fdkVersion}
      }
      dockerFile: "./internal/tests-images/python3.9/hello-world-test/Build_file.bs"
      dockerBuildPwd: "./internal/tests-images/python3.9/hello-world-test"
      images: [
        {
          platform: "linux/x86_64"
        },
        {
          platform: "linux/arm64"
        }
      ]
      artifacts: [
        "**"
      ]
    },
    {
        name: publish_test_image_hello_world_test_3.9
        type: publishdocker
        dependsOn: build_test_image_hello_world_test_3.9
        imageName: "faas-hello-world-fn"
        repository: odo-docker-signed-local
        artifacts: [
          "**"
        ]
    },
    {
      name: build_test_image_hello_world_src_test_3.9
      type: dockerizer
      dependsOn: setup_test_image_build3.9
      dockerBuildArgs: {
        HTTP_PROXY: ${HTTP_PROXY}
        HTTPS_PROXY: ${HTTPS_PROXY}
        NO_PROXY: ${NO_PROXY}
        BUILD_IMAGE_VERSION: ${buildImageVersion}
        RUNTIME_IMAGE_VERSION: ${runtimeImageVersion}
        FDK_VERSION: ${fdkVersion}
        PKG_EXTENSION: ".tar.gz"
      }
      dockerFile: "./internal/tests-images/python3.9/hello-world-test/Build_file.bs"
      dockerBuildPwd: "./internal/tests-images/python3.9/hello-world-test"
      images: [
        {
          platform: "linux/x86_64"
        },
        {
          platform: "linux/arm64"
        }
      ]
      artifacts: [
        "**"
      ]
    },
    {
        name: publish_test_image_hello_world_src_test_3.9
        type: publishdocker
        dependsOn: build_test_image_hello_world_src_test_3.9
        imageName: "faas-hello-world-fn-src"
        repository: odo-docker-signed-local
        artifacts: [
          "**"
        ]
    },
    {
      name: build_test_image_oci_sdk_test_3.9
      type: dockerizer
      dependsOn: setup_test_image_build3.9
      dockerBuildArgs: {
        HTTP_PROXY: ${HTTP_PROXY}
        HTTPS_PROXY: ${HTTPS_PROXY}
        NO_PROXY: ${NO_PROXY}
        BUILD_IMAGE_VERSION: ${buildImageVersion}
        RUNTIME_IMAGE_VERSION: ${runtimeImageVersion}
        FDK_VERSION: ${fdkVersion}
      }
      dockerFile: "./internal/tests-images/python3.9/oci-sdk-test/Build_file.bs"
      dockerBuildPwd: "./internal/tests-images/python3.9/oci-sdk-test"
      images: [
        {
          platform: "linux/x86_64"
        },
        {
          platform: "linux/arm64"
        }
      ]
      artifacts: [
        "**"
      ]
    },
    {
        name: publish_test_image_oci_sdk_test_3.9
        type: publishdocker
        dependsOn: build_test_image_oci_sdk_test_3.9
        imageName: "faas-oci-sdk-fn"
        repository: odo-docker-signed-local
        artifacts: [
          "**"
        ]
    },
    {
        name: build_test_image_runtime_version_fn_3.9
        type: dockerizer
        dependsOn: setup_test_image_build3.9
        dockerBuildArgs: {
            HTTP_PROXY: ${HTTP_PROXY}
            HTTPS_PROXY: ${HTTPS_PROXY}
            NO_PROXY: ${NO_PROXY}
            BUILD_IMAGE_VERSION: ${buildImageVersion}
            RUNTIME_IMAGE_VERSION: ${runtimeImageVersion}
            FDK_VERSION: ${fdkVersion}
        }
        dockerFile: "./internal/tests-images/python3.9/runtime-version-test/Build_file.bs"
        dockerBuildPwd: "./internal/tests-images/python3.9/runtime-version-test"
        images : [
            {
                platform: "linux/x86_64"
            },
            {
                platform: "linux/arm64"
            }
        ]
        artifacts: [
            "**"
        ]
    },
    {
        name: publish_test_image_runtime_version_fn_3.9
        type: publishdocker
        dependsOn: build_test_image_runtime_version_fn_3.9
        imageName: "faas-runtime-version-fn"
        repository: odo-docker-signed-local
        artifacts: [
          "**"
        ]
    },
    {
        name: build_test_image_timeout_fn_3.9
        type: dockerizer
        dependsOn: setup_test_image_build3.9
        dockerBuildArgs: {
            HTTP_PROXY: ${HTTP_PROXY}
            HTTPS_PROXY: ${HTTPS_PROXY}
            NO_PROXY: ${NO_PROXY}
            BUILD_IMAGE_VERSION: ${buildImageVersion}
            RUNTIME_IMAGE_VERSION: ${runtimeImageVersion}
            FDK_VERSION: ${fdkVersion}
        }
        dockerFile: "./internal/tests-images/python3.9/timeout-test/Build_file.bs"
        dockerBuildPwd: "./internal/tests-images/python3.9/timeout-test"
        images : [
            {
                platform: "linux/x86_64"
            },
            {
                platform: "linux/arm64"
            }
        ]
        artifacts: [
            "**"
        ]
    },
    {
        name: publish_test_image_timeout_fn_3.9
        type: publishdocker
        dependsOn: build_test_image_timeout_fn_3.9
        imageName: "faas-timeout-fn"
        repository: odo-docker-signed-local
        artifacts: [
          "**"
        ]
    },
    ### python 3.11 Images ###
    {
        name: setup_python3.11_build_image
        type: make
        dependsOn: [set_fdk_version, build_dist_package]
        environment: {
            PYTHON_VERSION: "3.11"
            VERSION_SUFFIX: "dev"
            RELEASE: ${RELEASE}
        }
        makeCommands: [
            { target: "set_image_version", args: "-f internal/Makefile" }
        ]
        artifacts: [
            "**"
        ]
    },
    {
      name: build_image_python3.11
      type: dockerizer
      dependsOn: setup_python3.11_build_image
      dockerFile: "./internal/images/build-stage/3.11/Dockerfile"
      dockerBuildPwd: "./internal/images/build-stage/3.11"
      environment: {
        DOCKER_BUILDKIT: "1"
      }
      dockerBuildArgs: {
        HTTP_PROXY: ${HTTP_PROXY}
        HTTPS_PROXY: ${HTTPS_PROXY}
        NO_PROXY: ${NO_PROXY}
      }
      images: [
        {
          platform: "linux/x86_64"
        },
        {
          platform: "linux/arm64"
        }
      ]
      artifacts: [
        "**"
      ]
    },
    {
      name: publish_build_image_python3.11
      type: publishdocker
      dependsOn: build_image_python3.11
      imageName: "fdk-python"
      repository: odo-docker-signed-local
      artifacts: [
        "**"
      ]
    },
    # The individual build chains for each image can't be merged if the value of the version variable differs,
    # setting it back to the FDK version because that's the only bit that changes per build
    {
      name: fixup_version_build3.11
      type: make
      dependsOn: publish_build_image_python3.11
      environment: {
        RELEASE: ${RELEASE}
      }
      makeCommands: [
        { target: "set_fdk_version", args: "-f internal/Makefile" }
      ]
      artifacts: [
        "**"
      ]
    },
    {
      name: setup_python3.11_runtime_image
      type: make
      dependsOn: [set_fdk_version, build_dist_package]
      environment: {
        PYTHON_VERSION: "3.11"
        RELEASE: ${RELEASE}
      }
      makeCommands: [
        { target: "set_image_version", args: "-f internal/Makefile" }
      ]
      artifacts: [
        "**"
      ]
    },
    {
      name: runtime_image_python3.11
      type: dockerizer
      dependsOn: setup_python3.11_runtime_image,
      dockerFile: "./internal/images/build-stage/3.11/Dockerfile"
      dockerBuildPwd: "./internal/images/build-stage/3.11"
      environment: {
        DOCKER_BUILDKIT: "1"
      }
      dockerBuildArgs: {
          HTTP_PROXY: ${HTTP_PROXY}
          HTTPS_PROXY: ${HTTPS_PROXY}
          NO_PROXY: ${NO_PROXY}
      }
      images: [
        {
          platform: "linux/x86_64"
        },
        {
          platform: "linux/arm64"
        }
      ]
      artifacts: [
        "**"
      ]
    },
    {
      name: publish_runtime_image_python3.11
      type: publishdocker
      dependsOn: runtime_image_python3.11
      imageName: "fdk-python"
      repository: odo-docker-signed-local
      artifacts: [
        "**"
      ]
    },
     # The individual build chains for each image can't be merged if the value of the version vaiable differs,
    # setting it back to the FDK version because that's the only bit that changes per build
    {
      name: fixup_version_runtime3.11
      type: make
      dependsOn: publish_runtime_image_python3.11
      environment: {
        RELEASE: ${RELEASE}
      }
      makeCommands: [
        { target: "set_fdk_version", args: "-f internal/Makefile" }
      ]
      artifacts: [
        "**"
      ]
    },
    {
      name: setup_test_image_build3.11
      type: make
      dependsOn: [unit_test, fixup_version_build3.11, fixup_version_runtime3.11]
      environment: {
        PYTHON_VERSION: "3.11"
        TEST_DIR: ${BLD_INPUT_DIR}"/internal/tests-images/python3.8"
        RELEASE: ${RELEASE}
      }
      makeCommands: [
        { target: "setup_test_image_build", args: "-f internal/Makefile" }
      ]
      artifacts: [
          "**"
      ]
    },
    {
      name: build_test_image_hello_world_test_3.11
      type: dockerizer
      dependsOn: setup_test_image_build3.11
      dockerBuildArgs: {
        HTTP_PROXY: ${HTTP_PROXY}
        HTTPS_PROXY: ${HTTPS_PROXY}
        NO_PROXY: ${NO_PROXY}
        BUILD_IMAGE_VERSION: ${buildImageVersion}
        RUNTIME_IMAGE_VERSION: ${runtimeImageVersion}
        FDK_VERSION: ${fdkVersion}
      }
      dockerFile: "./internal/tests-images/python3.11/hello-world-test/Build_file.bs"
      dockerBuildPwd: "./internal/tests-images/python3.11/hello-world-test"
      images: [
        {
          platform: "linux/x86_64"
        },
        {
          platform: "linux/arm64"
        }
      ]
      artifacts: [
        "**"
      ]
    },
    {
        name: publish_test_image_hello_world_test_3.11
        type: publishdocker
        dependsOn: build_test_image_hello_world_test_3.11
        imageName: "faas-hello-world-fn"
        repository: odo-docker-signed-local
        artifacts: [
          "**"
        ]
    },
    {
      name: build_test_image_hello_world_src_test_3.11
      type: dockerizer
      dependsOn: setup_test_image_build3.11
      dockerBuildArgs: {
        HTTP_PROXY: ${HTTP_PROXY}
        HTTPS_PROXY: ${HTTPS_PROXY}
        NO_PROXY: ${NO_PROXY}
        BUILD_IMAGE_VERSION: ${buildImageVersion}
        RUNTIME_IMAGE_VERSION: ${runtimeImageVersion}
        FDK_VERSION: ${fdkVersion}
        PKG_EXTENSION: ".tar.gz"
      }
      dockerFile: "./internal/tests-images/python3.11/hello-world-test/Build_file.bs"
      dockerBuildPwd: "./internal/tests-images/python3.11/hello-world-test"
      images: [
        {
          platform: "linux/x86_64"
        },
        {
          platform: "linux/arm64"
        }
      ]
      artifacts: [
        "**"
      ]
    },
    {
        name: publish_test_image_hello_world_src_test_3.11
        type: publishdocker
        dependsOn: build_test_image_hello_world_src_test_3.11
        imageName: "faas-hello-world-fn-src"
        repository: odo-docker-signed-local
        artifacts: [
          "**"
        ]
    },
    {
      name: build_test_image_oci_sdk_test_3.11
      type: dockerizer
      dependsOn: setup_test_image_build3.11
      dockerBuildArgs: {
        HTTP_PROXY: ${HTTP_PROXY}
        HTTPS_PROXY: ${HTTPS_PROXY}
        NO_PROXY: ${NO_PROXY}
        BUILD_IMAGE_VERSION: ${buildImageVersion}
        RUNTIME_IMAGE_VERSION: ${runtimeImageVersion}
        FDK_VERSION: ${fdkVersion}
      }
      dockerFile: "./internal/tests-images/python3.11/oci-sdk-test/Build_file.bs"
      dockerBuildPwd: "./internal/tests-images/python3.11/oci-sdk-test"
      images: [
        {
          platform: "linux/x86_64"
        },
        {
          platform: "linux/arm64"
        }
      ]
      artifacts: [
        "**"
      ]
    },
    {
        name: publish_test_image_oci_sdk_test_3.11
        type: publishdocker
        dependsOn: build_test_image_oci_sdk_test_3.11
        imageName: "faas-oci-sdk-fn"
        repository: odo-docker-signed-local
        artifacts: [
          "**"
        ]
    },
    {
        name: build_test_image_runtime_version_fn_3.11
        type: dockerizer
        dependsOn: setup_test_image_build3.11
        dockerBuildArgs: {
            HTTP_PROXY: ${HTTP_PROXY}
            HTTPS_PROXY: ${HTTPS_PROXY}
            NO_PROXY: ${NO_PROXY}
            BUILD_IMAGE_VERSION: ${buildImageVersion}
            RUNTIME_IMAGE_VERSION: ${runtimeImageVersion}
            FDK_VERSION: ${fdkVersion}
        }
        dockerFile: "./internal/tests-images/python3.11/runtime-version-test/Build_file.bs"
        dockerBuildPwd: "./internal/tests-images/python3.11/runtime-version-test"
        images : [
            {
                platform: "linux/x86_64"
            },
            {
                platform: "linux/arm64"
            }
        ]
        artifacts: [
            "**"
        ]
    },
    {
        name: publish_test_image_runtime_version_fn_3.11
        type: publishdocker
        dependsOn: build_test_image_runtime_version_fn_3.11
        imageName: "faas-runtime-version-fn"
        repository: odo-docker-signed-local
        artifacts: [
          "**"
        ]
    },
    {
        name: build_test_image_timeout_fn_3.11
        type: dockerizer
        dependsOn: setup_test_image_build3.11
        dockerBuildArgs: {
            HTTP_PROXY: ${HTTP_PROXY}
            HTTPS_PROXY: ${HTTPS_PROXY}
            NO_PROXY: ${NO_PROXY}
            BUILD_IMAGE_VERSION: ${buildImageVersion}
            RUNTIME_IMAGE_VERSION: ${runtimeImageVersion}
            FDK_VERSION: ${fdkVersion}
        }
        dockerFile: "./internal/tests-images/python3.11/timeout-test/Build_file.bs"
        dockerBuildPwd: "./internal/tests-images/python3.11/timeout-test"
        images : [
            {
                platform: "linux/x86_64"
            },
            {
                platform: "linux/arm64"
            }
        ]
        artifacts: [
            "**"
        ]
    },
    {
        name: publish_test_image_timeout_fn_3.11
        type: publishdocker
        dependsOn: build_test_image_timeout_fn_3.11
        imageName: "faas-timeout-fn"
        repository: odo-docker-signed-local
        artifacts: [
          "**"
        ]
    },
]
